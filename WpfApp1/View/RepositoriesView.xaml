<UserControl x:Class="GitControl.View.RepositoriesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:local="clr-namespace:GitControl.ViewModel"
            xmlns:views="clr-namespace:GitControl.View"
            xmlns:GitControl="clr-namespace:GitControl"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Background="LightGray">
    <UserControl.Resources>
        <local:RepositoriesModel x:Key="RepositoriesModel"/>
    </UserControl.Resources>
    <Grid DataContext="{StaticResource RepositoriesModel}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <Button Content="Create local" Command="{Binding CreateLocalRepositoryCommand}" ToolTip="Create local repository" />
            <Button Content="Add existing" Command="{Binding AddExistingRepositoryCommand}" ToolTip="Add existing repository"/>
            <Button Content="Clone" Command="{Binding CloneRemoteRepositoryCommand}" ToolTip="Clone remote repository" />
        </StackPanel>
        <DataGrid Grid.Row="1" ItemsSource="{Binding Repositories}" CanUserAddRows="False" SelectionUnit="Cell" SelectionMode="Extended" AutoGenerateColumns="False" HorizontalScrollBarVisibility="Disabled">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Active" Width="auto" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Label Content="{Binding Active}" Margin="0,0,0,0" Padding="0,0,0,0">
                                <i:Interaction.Triggers>
                                    <i:DataTrigger Binding="{Binding Active}" Value="Active">
                                        <i:ChangePropertyAction PropertyName="Background" Value="LightGreen" />
                                    </i:DataTrigger>
                                    <i:DataTrigger Binding="{Binding Active}" Value="Inactive">
                                        <i:ChangePropertyAction PropertyName="Background" Value="OrangeRed" />
                                    </i:DataTrigger>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction Command="{Binding RowActionCommand, Source={StaticResource RepositoriesModel}}" 
                                            CommandParameter="{Binding }"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>                                
                            </Label>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Name"  Width="auto" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Label Content="Test" Margin="0,0,0,0" Padding="0,0,0,0">
                                <i:Interaction.Triggers>
                                    <i:DataTrigger Binding="{Binding Active}" Value="Active">
                                        <i:ChangePropertyAction PropertyName="FontWeight" Value="Bold"/>
                                    </i:DataTrigger>
                                    <i:DataTrigger Binding="{Binding Active}" Value="Inactive">
                                        <i:ChangePropertyAction PropertyName="FontWeight" Value="Normal"/>
                                    </i:DataTrigger>
                                    <i:EventTrigger EventName="MouseDown">
                                        <i:InvokeCommandAction Command="{Binding RowActionCommand, Source={StaticResource RepositoriesModel}}" 
                                            CommandParameter="{Binding }" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>                                
                            </Label>
                        </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Path" Binding="{Binding Path}" IsReadOnly="True" Width="*"/>
                <DataGridTextColumn Header="RemoteName" Binding="{Binding RemoteName}" IsReadOnly="True" Width="auto"/>
                <DataGridTextColumn Header="RemotePath" Binding="{Binding RemotePath}" IsReadOnly="True" Width="auto"/>
                <DataGridTemplateColumn Header="Name"  Width="auto" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button x:Name="RepositoryOptionsButton">
                                <Button.ContextMenu>
                                    <ContextMenu VerticalContentAlignment="Top" >
                                        <MenuItem Header="Remove"  Command="{Binding RowActionCommand, Source={StaticResource RepositoriesModel}}" 
                                            CommandParameter="{Binding }" />
                                        <MenuItem Header="Remove and delete repository directory with content"  Command="{Binding RowActionCommand, Source={StaticResource RepositoriesModel}}" 
                                            CommandParameter="{Binding }" />
                                    </ContextMenu>
                                </Button.ContextMenu>

                                <i:Interaction.Triggers>
                                    <i:EventTrigger  EventName="Click">
                                        <i:ChangePropertyAction TargetObject="{Binding ContextMenu, ElementName=RepositoryOptionsButton}" PropertyName="PlacementTarget" Value="{Binding ElementName=RepositoryOptionsButton, Mode=OneWay}"/>
                                        <i:ChangePropertyAction TargetObject="{Binding ContextMenu, ElementName=RepositoryOptionsButton}" PropertyName="IsOpen" Value="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
            </DataGrid.Columns>
        </DataGrid>
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="Loaded">
                <i:InvokeCommandAction Command="{Binding LoadedCommand}"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>
    </Grid>
</UserControl>
